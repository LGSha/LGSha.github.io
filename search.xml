<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基础入门（二）</title>
      <link href="/2021/12/03/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/12/03/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1、Web应用环境架构"><a href="#1、Web应用环境架构" class="headerlink" title="1、Web应用环境架构"></a>1、Web应用环境架构</h2><p>​    我们常见的Web应用环境主要是由开发语言，程序源码，中间件容器，数据库，服务器操作系统，第三方软件等组成构建的。</p><p>​    开发语言：也就是指Web应用是使用什么程序语言所编写的，如php、asp、jsp、java、python、ruby，go、html、javascript等。</p><p>​    程序源码：就是由各种开发语言所编写好的程序代码，可根据开发语言分类；应用类型分类；开源CMS分类；开发框架分类等。</p><p>​    中间件容器：简单来说，中间件就是用来支撑Web应用运行的平台，主流的中间件有IIS、Apache、Nginx、Tomcat、Jboss、Weblogic、Glassfish等。</p><p>​    数据库：数据库是用来存储Web应用的各种数据的，常见的数据库有：Access、Mysql、Mssql、Oracle、db2、Sybase、Redis、MongoDB等。</p><p>​    服务器操作系统：主要有Windows系列、Linux系列和Mac系列等。</p><p>​    第三方软件：第三方软件就是管理员根据自己的需求所安装的其他软件，它不是Web应用环境所必需的，比如phpmyadmin、vs-ftpd、VNC、ELK、Openssh等。</p><h2 id="2、Web应用安全漏洞分类"><a href="#2、Web应用安全漏洞分类" class="headerlink" title="2、Web应用安全漏洞分类"></a>2、Web应用安全漏洞分类</h2><p>​    常见的Web安全漏洞包括SQL注入、XSS跨站脚本、RCE执行、CSRF/SSRF/CRLF、反序列化、逻辑越权、XXE、未授权访问、弱口令安全、文件安全（文件上传、文件包含、文件下载/删除）等。</p><p>​    在了解了Web应用的环境架构之后，我们需要对这些Web应用安全漏洞有明确的认识和理解。它们都是产生在程序源码层面的，主要是由于开发人员在编写程序代码时没有严格的规范和过滤所导致的各种漏洞，用一句话来概括就是漏洞函数决定是何种漏洞，可控变量决定漏洞是否可以利用。</p><p>​    所以说，这些漏洞的产生是和中间件、数据库、操作系统都没有关系的。</p><h2 id="3、Web数据包请求响应过程"><a href="#3、Web数据包请求响应过程" class="headerlink" title="3、Web数据包请求响应过程"></a>3、Web数据包请求响应过程</h2><p>​    （1）请求数据包：</p><p>1.请求行：请求类型/请求资源路径、协议的版本和类型</p><p>2.请求头：一些键值对，一般由w3c定义，浏览器与web服务器之间都可以发送，表示特定的某种含义</p><p>3.【空行】请求头与请求体之间用一个空行隔开；</p><p>4.请求体：要发送的数据(一般post方式会使用)；例：userName=123&amp;password=123&amp;code=…</p><p>​    （2）响应数据包：</p><p>1.状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔</p><p>2.响应头：包含服务器类型、日期、长度、内容类型等</p><p>3.【空行】响应头与响应体之间用空行隔开</p><p>4.响应正文：程序处理后果，浏览器会将实体内容中的数据取出来，生成相应的页面</p><p>​    其中有一些关键的参数含义我们需要了解，如：Host、User-Agent、Cookie、Referer、Server、Content-Length等。这里就不一一赘述了，可以参考以下链接：</p><p>​    <a href="https://www.cnblogs.com/cherrycui/p/10815465.html">https://www.cnblogs.com/cherrycui/p/10815465.html</a></p><p>​    这里需要介绍到一款本地代理工具，也可以叫抓包工具，Burpsuite。它上面集成了许多的模块，其中Proxy模块是一个拦截HTTP/S的代理服务器，作为一个在浏览器和目标应用程序之间的中间人，允许你拦截，查看，修改在两个方向上的原始数据流。</p><p>​    借助Burpsuite可以帮助我们更直观地了解数据包的请求响应过程。</p><p><img src="C:\Users\Administrator\Desktop\P-CXBjDJIbf6whZeJ0ghFA.png"></p><p><img src="C:\Users\Administrator\Desktop\ZKpoyq4mYDuQ6r3_5gagJA.png"></p><p>​    这里还有一个需要了解的知识点就是我们常说的状态码，常见的状态码包括：</p><p>1**：提示信息-表示请求已收到，继续处理</p><p>2**：发送成功（200）</p><p>3**：重定向（302）</p><p>4**：客户端错误</p><p>　　400.发送请求有语法错误</p><p>　　401.访问页面没有授权</p><p>　　403.没有权限访问该页面</p><p>　　404.没有该页面</p><p>5**：服务端错误</p><p>　　500.服务器内部异常</p><p>　　504.服务器请求超时，没有返回结果</p><p>​    在渗透测试的信息收集过程中有一个关键的点就是针对网站文件后台目录的扫描，它的核心原理就是通过判断请求文件地址所返回的状态码来决定的。</p><h2 id="4、实验"><a href="#4、实验" class="headerlink" title="4、实验"></a>4、实验</h2><p>​    本次实验是关于网站的搭建，利用到宝塔的搭建平台来实现，它集成了我们所需的各种开发语言、中间件、数据库和第三方软件，并且可以根据我们的应用需求一键部署。</p><p>​    由于实验内容比较基础，在此就不予展示啦！</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站搭建 </tag>
            
            <tag> Web应用环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础入门（一）</title>
      <link href="/2021/11/30/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2021/11/30/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1、名词解释"><a href="#1、名词解释" class="headerlink" title="1、名词解释"></a>1、名词解释</h2><p>​    Poc：简单来说就是漏洞验证代码；</p><p>​    Exp：简单来说就是漏洞利用代码；</p><p>​    Payload：我们俗称的利用载荷，也可以叫利用管道，就是漏洞利用成功后如何给到我们和目标的一种交互或连接方式吧，这里是我自己的理解；</p><p>​    Webshell：也就是我们常说的的网站后门，它是一种以asp，jsp，php等格式文件存在的命令执行环境；</p><p>​    木马：木马就是黑客用来控制目标系统的程序，它会被伪装成一些表面正常的程序来运行，从而实现对目标系统的控制；</p><p>​    病毒：就是能够直接对目标系统造成破坏的程序或代码。</p><p>​    ……</p><p>​    还有很多的专业名词可以参考相关链接：</p><p>​    <a href="https://www.cnblogs.com/sunny11/p/13583083.html">https://www.cnblogs.com/sunny11/p/13583083.html</a></p><h2 id="2、操作系统"><a href="#2、操作系统" class="headerlink" title="2、操作系统"></a>2、操作系统</h2><p>​    操作系统主要分为Windows、Linux和MacOS，根据用途如个人用机、服务器用机又衍生出了各个操作系统的不同版本。如Windows Sever 2008/2012/2016主要是服务器用机，而Windows 7/10则主要是个人用机；Linux的话版本有Centos/Ubuntu/Redhat等，主要是服务器用机；MacOS大多为个人用机。</p><p>​    说到操作系统还涉及到几个关键的知识点需要掌握：</p><p>​    一是我们经常打交道的操作系统命令，Windows的操作系统命令可以通过cmd和powershell窗口来实现；Linux的话大多都是非图像化界面，所以直接通过终端来输入命令执行各种操作。由于命令非常的繁多，我们只需要掌握常用的命令即可，遇到不会的直接网上搜索。可以参考相关链接如下：</p><p>​    <a href="https://blog.csdn.net/weixin_43303273/article/details/83029138">https://blog.csdn.net/weixin_43303273/article/details/83029138</a></p><p>​    二是权限，比如说常见的针对文件目录的读写和执行权限，Windows和Linux分别都是通过对用户和用户组的权限划分来实现的。</p><p>​    三是网络，这里所说的网络是指对内网和外网的理解，内网就是指我们在家庭、学校、公司所使用的这种局域网，外网就是我们所说的公网，即互联网。正常情况下，我们在内网的主机是可以访问外网的服务器，但是外网的主机是不能访问到内网的主机，因为内网的ip地址是私有ip，每个局域网都会存在使用这些ip，所以外网主机就无法准确地寻找到你，它只能到达你的出网口，比如我们的路由器，除非你通过路由器的策略来配置端口转发，这样即可实现互访。只有理解了内网和外网的区别，才能便于我们在后期的渗透测试中更好的理解和分析。</p><p>​    四是防火墙。这里所说的是我们系统自身的防火墙，它主要是用来检测主机外来的数据流量，如果存在恶意的数据流量就会被防火墙直接给阻断。Windows的防火墙在控制面板中的系统和安全中来配置，Linux则是通过Iptables来实现。防火墙的规则主要都是针对外来数据流量的检测，简单来说就是入站检测严格，出站检测宽松。</p><h2 id="3、实验"><a href="#3、实验" class="headerlink" title="3、实验"></a>3、实验</h2><p>​    实验所涉及的知识点是关于反弹shell，由于实验操作比较敏感，在此就不予展示了。需要我们掌握的是什么是正向连接和反向连接，正向连接就是以我们为主体去向目标主机请求数据连接，但是如果目标主机存在有防火墙的话，我们的一些非法请求就会被防火墙给阻断，造成数据无法回显和通讯。这个时候我们就需要考虑反向连接了，让目标服务器来主动连接我们，由于防火墙的规则对出站的数据流量检测宽松，这样我们就可以实现我们对目标主机的一些…嘻嘻。</p><p>​    实验所使用的工具是Netcat,简称nc，安全界叫它瑞士军刀，它是一款简单的Unix工具，使用UDP和TCP协议。它是一个可靠的容易被其他程序所启用的后台操作工具，同时它也被用作网络的测试工具或黑客工具。使用它你可以轻易的建立任何连接。内建有很多实用的工具。</p><h2 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h2><p>​    今天所讲的都是一些基础入门的知识点，核心是理解和掌握正向和反向连接。</p><p>​    在此还要推荐一个非常不错的安全学习网站：</p><p>​    棱角：<a href="https://forum.ywhack.com/bountytips.php">https://forum.ywhack.com/bountytips.php</a></p><p>​    </p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 专业名词 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在开头</title>
      <link href="/2021/11/05/Myfirst-Blog/"/>
      <url>/2021/11/05/Myfirst-Blog/</url>
      
        <content type="html"><![CDATA[<p>​    这是我的第一篇博客！</p><p>​    本人是今年六月份刚刚毕业的，就读于安徽一所普通的双非一本大学，专业是信息安全，说起我的专业，我实在是回忆不起当时自己是怎么报的这个专业了，所以就糊里糊涂的挥霍完了我大学四年美好的时光了。理所应当，毕业面临的是找工作还是考研的两大选择难题，家里人都希望我考研，我也尝试过了，但后来因为我个人和家庭的一些原因放弃了，就只能找工作一条路走到黑了。毕业前几个月开始疯狂恶补专业知识，看到有的同学们都拿到了理想的offer我实在是羡慕呀，同时也留下了悔恨的泪水，没办法，只能退而求其次，先去一些小的公司实习实习攒点经验。最初是去了一家做等保的公司实习，做了大概一个多月，和我未来的职业规划实在差别太大了，我就果断跑路了。后来经同学的介绍去了绿盟实习，我真的很感谢在绿盟实习的这将近3个月时间，虽说没有什么显著的提升，但是让我看见和明确了自己未来的职业道路，算是正式的踏入网安这个行业吧！</p><p>​    咳！咳！废话了这么多，还是切回正题吧！关于搭建这个博客的原因，起初是看到好多大佬们都有自己的博客来记录学习和生活，感觉非常的nice，后面考虑到种种原因，就想自己也搭一个来玩玩，最起码记录一下自己的学习历程也算是一件非常有意义的事了！但老实说，我真的不是一个喜欢写日记的人，所以这个博客的搭建我前前后后大概花了有半个月的时间。因为我个人专业的原因，所以博客的内容大多都会和网络安全有关，正好前几天报了小迪老师的课，我准备以小迪老师课程的步伐来记录我的学习历程。</p><p>​    不管怎么说，做任何一件事只要是开始了，就永远要比停在原地有收获，我希望自己能坚持下去！</p>]]></content>
      
      
      <categories>
          
          <category> 个人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> first </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/24/hello-world/"/>
      <url>/2021/10/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
